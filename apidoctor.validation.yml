# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# This pipeline will be extended to the OneESPT template
# If you are not using the E+D shared hosted pool with windows-2022, replace the pool section with your hosted pool, os, and image name. If you are using a Linux image, you must specify an additional windows image for SDL: https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/sdlanalysis/overview#how-to-specify-a-windows-pool-for-the-sdl-source-analysis-stage
trigger:
  branches:
    include:
    - live
    - main
  paths:
    include:
    - api-reference/*
pr:
  branches:
    include:
    - live
    - main
  paths:
    include:
    - api-reference/*
parameters:
- name: useNuGetPackage
  displayName: "Use API Doctor NuGet Package (If disabled, source code from GitHub will be used)?"
  type: boolean
  default: true
- name: apiDoctorNuGetVersion
  default: "1.2.2312.152"
  displayName: "API Doctor NuGet Package Version"
- name: apiDoctorGitRepoUrl
  default: "https://github.com/OneDrive/apidoctor.git"
  displayName: "API Doctor Git Repo URL"
- name: apiDoctorGitBranch
  default: "master"
  displayName: "API Doctor Git branch"
resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-2022
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: stage
      jobs:
      - job: job
        steps:
        - checkout: self
          displayName: 'Checkout Microsoft Graph docs'
          clean: true
          fetchDepth: 1
        - task: UseDotNet@2
          displayName: 'Use .NET Core SDK 6.x'
          inputs:
            version: 6.x
        - task: PowerShell@2
          displayName: 'Run API Doctor Script'
          env:
            USE_NUGET_PACKAGE: ${{ parameters.useNuGetPackage }}
            API_DOCTOR_NUGET_VERSION: ${{ parameters.apiDoctorNuGetVersion }}
            API_DOCTOR_GIT_REPO_URL: ${{ parameters.apiDoctorGitRepoUrl }}
            API_DOCTOR_GIT_BRANCH: ${{ parameters.apiDoctorGitBranch }}
          inputs:
            filePath: Test-Docs.ps1
            arguments: -cleanUp
            script: |
              Write-Host "Executing API Doctor script with the following parameters:"       
              if($env:USE_NUGET_PACKAGE -eq 'True') {
                  Write-Host " - API Doctor NuGet Version: $($env:API_DOCTOR_NUGET_VERSION)"
              }
              else 
              {   
                  Write-Host "API Doctor Git Repo:"
                  Write-Host "- URL: $($env:API_DOCTOR_GIT_REPO_URL)"
                  Write-Host "- Branch: $($env:API_DOCTOR_GIT_BRANCH)"
              }